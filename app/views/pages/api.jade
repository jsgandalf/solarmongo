extends ../layouts/default

block content
	.container
		.jumbotron
			h1 Api Implementation
			br
			h3 Getting a token
			p
				| REQUEST TOKEN (POST): /api/token - requires: email, password - returns the token that is user specific. Will require email and password as parameters.
			p
				| Pass this in to req.user: (remember that each of these parameters is necessary for the app to run properly, if you left out date_created for both user and token, and left out token._id, you'd be fine )
			p
				ul(style="list-style:none")
					li
						| user: {
					li
						| _id: 52f07e5437bd01a90f2ce51e,
					li
						| account: 52f07e5437bd01a90f2ce51f,
					li
						| email: 'sean@gmail.com',
					li
						| name: 's',
					li
						| token: { date_created: Mon Feb 03 2014 22:44:52 GMT-0700 (MST),
					li
						ul(style="list-style:none")
							li
								| _id: 52f07e5437bd01a90f2ce520,
							li
								| token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InNlYW5AZ21haWwuY29tIn0.Rq5HRC8OD9G1KscCySCcOUgQ9-ya__V06gWF_tTwWqo' },
							li
								| date_created: Mon Feb 03 2014 22:44:52 GMT-0700 (MST) 
					li
						| }


			h3 Leads
			p
				| You will be using GET, POST, PUT, and DEL for your requests. All requests requires the user object described above.
				ul
					li
						| GET LEADS(GET): /api/leads - returns: user (that is logged in), firstName, lastName, .. etc 
					li
						| CREATE LEAD(POST): /api/leads - requires at least: firstName, lastName - returns lead
					li
						| GET A LEAD(GET): /api/leads/:leadId - requires: leadId - returns a lead, user (that is logged in), firstName, lastName, .. etc 
					li
						| UPDATE LEAD(PUT): /api/leads/:leadId - requires: leadId - updates a lead - returns lead
					li
						| DELETE LEAD(DEL): /api/leads/:leadId - requires: leadId - updates a lead - returns lead
			p

		hr
		footer
			p &copy; SolarMongo 2014

	script(type="text/javascript").
		window.user = !{user};